import type { InferGetStaticPropsType } from "next";
import { useState } from "react";

import getAllReservations from "../lib/getAllReservations";

import range from "../utils/range";

import Head from "next/head";

import styles from "../styles/home.module.css";

const Home = ({
  reservations,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const [startDate, setStartDate] = useState<string | null>(null);
  const [endDate, setEndDate] = useState<string | null>(null);

  const day1 = startDate != null ? new Date(startDate).getDate() : null;
  const day2 = endDate != null ? new Date(endDate).getDate() : null;

  return (
    <div className={styles.app}>
      <Head>
        <title>Résa draps mvp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Reservations draps Mai</h1>
        <div className={styles.calendar}>
          {range(1, 32).map(i => {
            return <div key={`day-${i}`}>{i}</div>;
          })}
          {reservations.map(
            ({ id, startDate, endDate, numberOfSheet }, index) => {
              const startDay = new Date(startDate).getDate();
              const endDay = new Date(endDate).getDate();
              return (
                <div
                  key={id}
                  className={styles.reservation}
                  style={{
                    gridColumn: `${startDay}/${endDay}`,
                    gridRow: `${index + 2}`,
                  }}
                >
                  {numberOfSheet}
                </div>
              );
            }
          )}
          {day1 != null && day2 != null && (
            <div
              className={`${styles.reservation} ${styles.current}`}
              style={{
                gridColumn: `${day1}/${day2}`,
                gridRow: `${reservations.length + 2}`,
              }}
            ></div>
          )}
        </div>
        <section className={styles.makeReservation}>
          <div>
            <h2>Réserver</h2>
            <label className={styles.inputGroup}>
              Début réservation{" "}
              <input
                type="date"
                value={startDate ?? ""}
                onChange={e => setStartDate(e.target.value)}
                min="2022-05-01"
                max="2022-05-31"
              />
            </label>
            <label className={styles.inputGroup}>
              Fin réservation{" "}
              <input
                type="date"
                value={endDate ?? ""}
                onChange={e => setEndDate(e.target.value)}
                min="2022-05-01"
                max="2022-05-31"
              />
            </label>
          </div>
          <div></div>
        </section>
      </main>
    </div>
  );
};

const getStaticProps = async () => {
  return {
    props: {
      reservations: await getAllReservations(),
    },
  };
};

export { getStaticProps };

export default Home;
